def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '45'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '2.1.6'
}


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keys.properties')
if (keystorePropertiesFile.exists()) {
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
println keystorePropertiesFile
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30
    

    sourceSets {
 main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }
    signingConfigs {
        release {
             storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
        storePassword "mats2live"
        keyAlias "Key0"
        keyPassword "mats2live"
        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "in.matsapp.android"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
         
        release {
              minifyEnabled true
            useProguard true 
           
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation("androidx.multidex:multidex:2.0.1")
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.razorpay:checkout:1.6.11'

    //Enabled for google pay SDK integration
    //You need to whitelist your app package name at Razorpay to use this.
    //implementation(name: 'razorpay-googlepay-1.3.0', ext: 'aar')
    //implementation(name: 'google-pay-client-api-1.0.0', ext: 'aar')

    //Enable for Amazon pay SDK integration.
    //You need to whitelist your apps package name at razrpay first to use this
   
    //implementation(name: 'checkout-otpelf',ext: 'aar')
   // implementation 'com.android.support:customtabs:28.0.0'

    implementation 'com.google.android.gms:play-services-auth-api-phone:17.1.0'
}
